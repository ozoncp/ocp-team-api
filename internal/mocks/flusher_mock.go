// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-team-api/internal/flusher (interfaces: IFlusher)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozoncp/ocp-team-api/internal/models"
)

// MockIFlusher is a mock of IFlusher interface.
type MockIFlusher struct {
	ctrl     *gomock.Controller
	recorder *MockIFlusherMockRecorder
}

// MockIFlusherMockRecorder is the mock recorder for MockIFlusher.
type MockIFlusherMockRecorder struct {
	mock *MockIFlusher
}

// NewMockIFlusher creates a new mock instance.
func NewMockIFlusher(ctrl *gomock.Controller) *MockIFlusher {
	mock := &MockIFlusher{ctrl: ctrl}
	mock.recorder = &MockIFlusherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFlusher) EXPECT() *MockIFlusherMockRecorder {
	return m.recorder
}

// Flush mocks base method.
func (m *MockIFlusher) Flush(arg0 context.Context, arg1 []models.Team) []models.Team {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flush", arg0, arg1)
	ret0, _ := ret[0].([]models.Team)
	return ret0
}

// Flush indicates an expected call of Flush.
func (mr *MockIFlusherMockRecorder) Flush(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockIFlusher)(nil).Flush), arg0, arg1)
}
